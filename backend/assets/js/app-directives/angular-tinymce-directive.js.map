{"version":3,"sources":["app-directives/angular-tinymce-directive.js"],"names":[],"mappings":"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","file":"app-directives/angular-tinymce-directive.js","sourcesContent":["/**\n * Binds a TinyMCE widget to <textarea> elements.\n */\nangular.module('ui.tinymce', [])\n  .value('uiTinymceConfig', {})\n  .directive('uiTinymce', ['$rootScope', '$compile', '$timeout', '$window', '$sce', 'uiTinymceConfig', function($rootScope, $compile, $timeout, $window, $sce, uiTinymceConfig) {\n    uiTinymceConfig = uiTinymceConfig || {};\n    var generatedIds = 0;\n    var ID_ATTR = 'ui-tinymce';\n    if (uiTinymceConfig.baseUrl) {\n      tinymce.baseURL = uiTinymceConfig.baseUrl;\n    }\n\n    return {\n      require: ['ngModel', '^?form'],\n      link: function(scope, element, attrs, ctrls) {\n        if (!$window.tinymce) {\n          return;\n        }\n\n        var ngModel = ctrls[0],\n          form = ctrls[1] || null;\n\n        var expression, options = {}, tinyInstance,\n          updateView = function(editor) {\n            var content = editor.getContent({format: options.format}).trim();\n            content = $sce.trustAsHtml(content);\n\n            ngModel.$setViewValue(content);\n            if (!$rootScope.$$phase) {\n              scope.$apply();\n            }\n          };\n\n        function toggleDisable(disabled) {\n          if (disabled) {\n            ensureInstance();\n\n            if (tinyInstance) {\n              tinyInstance.getBody().setAttribute('contenteditable', false);\n            }\n          } else {\n            ensureInstance();\n\n            if (tinyInstance && !tinyInstance.settings.readonly) {\n              tinyInstance.getBody().setAttribute('contenteditable', true);\n            }\n          }\n        }\n\n        // generate an ID\n        attrs.$set('id', ID_ATTR + '-' + generatedIds++);\n\n        expression = {};\n\n        angular.extend(expression, scope.$eval(attrs.uiTinymce));\n\n        var setupOptions = {\n          // Update model when calling setContent\n          // (such as from the source editor popup)\n          setup: function(ed) {\n            ed.on('init', function() {\n              ngModel.$render();\n              ngModel.$setPristine();\n              if (form) {\n                form.$setPristine();\n              }\n            });\n\n            // Update model on button click\n            ed.on('ExecCommand', function() {\n              ed.save();\n              updateView(ed);\n            });\n\n            // Update model on change\n            ed.on('change', function() {\n              ed.save();\n              updateView(ed);\n            });\n\n            ed.on('blur', function() {\n              element[0].blur();\n            });\n\n            // Update model when an object has been resized (table, image)\n            ed.on('ObjectResized', function() {\n              ed.save();\n              updateView(ed);\n            });\n\n            ed.on('remove', function() {\n              element.remove();\n            });\n\n            if (expression.setup) {\n              expression.setup(ed, {\n                updateView: updateView\n              });\n            }\n          },\n          format: expression.format || 'html',\n          selector: '#' + attrs.id\n        };\n        // extend options with initial uiTinymceConfig and\n        // options from directive attribute value\n        angular.extend(options, uiTinymceConfig, expression, setupOptions);\n        // Wrapped in $timeout due to $tinymce:refresh implementation, requires\n        // element to be present in DOM before instantiating editor when\n        // re-rendering directive\n        $timeout(function() {\n          tinymce.init(options);\n          toggleDisable(scope.$eval(attrs.ngDisabled));\n        });\n\n        ngModel.$formatters.unshift(function(modelValue) {\n          return modelValue ? $sce.trustAsHtml(modelValue) : '';\n        });\n\n        ngModel.$parsers.unshift(function(viewValue) {\n          return viewValue ? $sce.getTrustedHtml(viewValue) : '';\n        });\n\n        ngModel.$render = function() {\n          ensureInstance();\n\n          var viewValue = ngModel.$viewValue ?\n            $sce.getTrustedHtml(ngModel.$viewValue) : '';\n\n          // instance.getDoc() check is a guard against null value\n          // when destruction & recreation of instances happen\n          if (tinyInstance &&\n            tinyInstance.getDoc()\n          ) {\n            tinyInstance.setContent(viewValue);\n            // Triggering change event due to TinyMCE not firing event &\n            // becoming out of sync for change callbacks\n            tinyInstance.fire('change');\n          }\n        };\n\n        attrs.$observe('disabled', toggleDisable);\n\n        // This block is because of TinyMCE not playing well with removal and\n        // recreation of instances, requiring instances to have different\n        // selectors in order to render new instances properly\n        scope.$on('$tinymce:refresh', function(e, id) {\n          var eid = attrs.id;\n          if (angular.isUndefined(id) || id === eid) {\n            var parentElement = element.parent();\n            var clonedElement = element.clone();\n            clonedElement.removeAttr('id');\n            clonedElement.removeAttr('style');\n            clonedElement.removeAttr('aria-hidden');\n            tinymce.execCommand('mceRemoveEditor', false, eid);\n            parentElement.append($compile(clonedElement)(scope));\n          }\n        });\n\n        scope.$on('$destroy', function() {\n          ensureInstance();\n\n          if (tinyInstance) {\n            tinyInstance.remove();\n            tinyInstance = null;\n          }\n        });\n\n        function ensureInstance() {\n          if (!tinyInstance) {\n            tinyInstance = tinymce.get(attrs.id);\n          }\n        }\n      }\n    };\n  }]);\n"],"sourceRoot":"/source/"}