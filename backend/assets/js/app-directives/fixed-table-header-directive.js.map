{"version":3,"sources":["app-directives/fixed-table-header-directive.js"],"names":[],"mappings":"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","file":"app-directives/fixed-table-header-directive.js","sourcesContent":["(function () {\r\n    angular\r\n        .module('enterprise')\r\n        .directive('fixedHeader', fixedHeader);\r\n \r\n    fixedHeader.$inject = ['$timeout'];\r\n \r\n    function fixedHeader($timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            link: link\r\n        };\r\n \r\n        function link($scope, $elem, $attrs, $ctrl) {\r\n            var elem = $elem[0];\r\n \r\n            // wait for data to load and then transform the table\r\n            $scope.$watch(tableDataLoaded, function(isTableDataLoaded) {\r\n                if (isTableDataLoaded) {\r\n                    transformTable();\r\n                }\r\n            });\r\n \r\n            function tableDataLoaded() {\r\n                // first cell in the tbody exists when data is loaded but doesn't have a width\r\n                // until after the table is transformed\r\n                var firstCell = elem.querySelector('tbody tr:first-child td:first-child');\r\n                return firstCell && !firstCell.style.width;\r\n            }\r\n \r\n            function transformTable() {\r\n                // reset display styles so column widths are correct when measured below\r\n                angular.element(elem.querySelectorAll('thead, tbody, tfoot')).css('display', '');\r\n \r\n                // wrap in $timeout to give table a chance to finish rendering\r\n                $timeout(function () {\r\n                    // set widths of columns\r\n                    angular.forEach(elem.querySelectorAll('tr:first-child th'), function (thElem, i) {\r\n \r\n                        var tdElems = elem.querySelector('tbody tr:first-child td:nth-child(' + (i + 1) + ')');\r\n                        var tfElems = elem.querySelector('tfoot tr:first-child td:nth-child(' + (i + 1) + ')');\r\n \r\n                        var columnWidth = tdElems ? tdElems.offsetWidth : thElem.offsetWidth;\r\n                        if (tdElems) {\r\n                            tdElems.style.width = columnWidth + 'px';\r\n                        }\r\n                        if (thElem) {\r\n                            thElem.style.width = columnWidth + 'px';\r\n                        }\r\n                        if (tfElems) {\r\n                            tfElems.style.width = columnWidth + 'px';\r\n                        }\r\n                    });\r\n \r\n                    // set css styles on thead and tbody\r\n                    angular.element(elem.querySelectorAll('thead, tfoot')).css('display', 'block');\r\n \r\n                    angular.element(elem.querySelectorAll('tbody')).css({\r\n                        'display': 'block',\r\n                        'height': $attrs.tableHeight || 'inherit',\r\n                        'overflow': 'auto'\r\n                    });\r\n \r\n                    // reduce width of last column by width of scrollbar\r\n                    var tbody = elem.querySelector('tbody');\r\n                    var scrollBarWidth = tbody.offsetWidth - tbody.clientWidth;\r\n                    if (scrollBarWidth > 0) {\r\n                        // for some reason trimming the width by 2px lines everything up better\r\n                        scrollBarWidth -= 2;\r\n                        var lastColumn = elem.querySelector('tbody tr:first-child td:last-child');\r\n                        lastColumn.style.width = (lastColumn.offsetWidth - scrollBarWidth) + 'px';\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();"],"sourceRoot":"/source/"}