{"version":3,"sources":["cancelable-http.js"],"names":[],"mappings":";;AAAA,AAAC,CAAA,YAAY;AACX,cAAY,CAAC;;;;;;;AAOb,SAAO,CACN,MAAM,CAAC,YAAY,CAAC,CACpB,MAAM,CAAC,MAAM,CAAC,CACd,OAAO,CAAC,uBAAuB,EAAE,WAAW,CAAC,CAC7C,OAAO,CAAC,2BAA2B,EAAE,eAAe,CAAC,CAAA;;AAGtD,WAAS,MAAM,CAAE,aAAa,EAAE;;AAE9B,iBAAa,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;GAE1D;;AAED,WAAS,WAAW,CAAE,EAAE,EAAE;;AAExB,QAAI,kBAAkB,GAAG,EAAE,CAAC;;AAE5B,QAAI,qBAAqB,GAAG,EAAE,CAAC;;AAE/B,yBAAqB,CAAC,iBAAiB,GAAG,YAAY;;AAEpD,UAAI,iBAAiB,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;;AAEnC,wBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;;AAE3C,aAAO,iBAAiB,CAAC,OAAO,CAAC;KAElC,CAAC;;AAEF,yBAAqB,CAAC,SAAS,GAAG,YAAY;;AAE5C,aAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAU,aAAa,EAAE;;AAE3D,qBAAa,CAAC,OAAO,EAAE,CAAC;OAEzB,CAAC,CAAC;;AAEH,wBAAkB,GAAG,EAAE,CAAC;KAEzB,CAAC;;AAEF,WAAO,qBAAqB,CAAC;GAC9B,CAAC;;AAEF,WAAS,eAAe,CAAE,EAAE,EAAE,qBAAqB,EAAE;;AAEnD,WAAO;;AAEL,aAAO,EAAE,iBAAU,MAAM,EAAE;;AAEzB,YAAI,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,SAAS,EACxC,MAAM,CAAC,OAAO,GAAG,qBAAqB,CAAC,iBAAiB,EAAE,CAAC;;AAG7D,eAAO,MAAM,CAAC;OAEf;KACF,CAAC;GACH,CAAC;CAEH,CAAA,EAAE,CAAE","file":"cancelable-http.js","sourcesContent":["(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name enterprise\n   * @description\n   *\n   */\n  angular\n  .module('enterprise')\n  .config(config)\n  .service('CancelableHttpService', httpService)\n  .factory('CancelableHttpInterceptor', httpInterceptor)\n\n\n  function config ($httpProvider) {\n\n    $httpProvider.interceptors.push('CancelableHttpService');\n\n  }\n\n  function httpService ($q) {\n\n    var cancelablePromises = [];\n\n    var CancelableHttpService = {};\n\n    CancelableHttpService.cancelablePromise = function () {\n\n      var cancelablePromise = $q.defer();\n\n      cancelablePromises.push(cancelablePromise);\n\n      return cancelablePromise.promise;\n\n    };\n\n    CancelableHttpService.cancelAll = function () {\n\n      angular.forEach(cancelablePromises, function (cancelPromise) {\n\n        cancelPromise.resolve();\n\n      });\n\n      cancelablePromises = [];\n\n    };\n\n    return CancelableHttpService;\n  };\n\n  function httpInterceptor ($q, CancelableHttpService) {\n\n    return {\n\n      request: function (config) {\n\n        if (config && config.timeout === undefined)\n          config.timeout = CancelableHttpService.cancelablePromise();\n        \n\n        return config;\n        \n      }\n    };\n  };\n\n}());"],"sourceRoot":"/source/"}